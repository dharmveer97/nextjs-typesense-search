const nextJest = require('next/jest');\n\n/** @type {import('jest').Config} */\nconst createJestConfig = nextJest({\n  // Provide the path to your Next.js app to load next.config.js and .env files\n  dir: './',\n});\n\n// Add any custom config to be passed to Jest\nconst config = {\n  // Test environment\n  testEnvironment: 'jsdom',\n  \n  // Setup files\n  setupFilesAfterEnv: ['<rootDir>/tests/jest.setup.js'],\n  \n  // Test patterns\n  testMatch: [\n    '<rootDir>/**/__tests__/**/*.(js|jsx|ts|tsx)',\n    '<rootDir>/**/*.(test|spec).(js|jsx|ts|tsx)',\n  ],\n  \n  // Coverage configuration\n  collectCoverageFrom: [\n    'app/**/*.{js,jsx,ts,tsx}',\n    'components/**/*.{js,jsx,ts,tsx}',\n    'lib/**/*.{js,jsx,ts,tsx}',\n    'hooks/**/*.{js,jsx,ts,tsx}',\n    'services/**/*.{js,jsx,ts,tsx}',\n    '!**/*.d.ts',\n    '!**/node_modules/**',\n    '!**/.next/**',\n    '!**/coverage/**',\n    '!**/*.config.{js,ts}',\n  ],\n  \n  coverageThreshold: {\n    global: {\n      branches: 70,\n      functions: 70,\n      lines: 70,\n      statements: 70,\n    },\n  },\n  \n  // Module paths\n  moduleNameMapping: {\n    '^@/(.*)$': '<rootDir>/$1',\n    '^@/components/(.*)$': '<rootDir>/components/$1',\n    '^@/lib/(.*)$': '<rootDir>/lib/$1',\n    '^@/hooks/(.*)$': '<rootDir>/hooks/$1',\n    '^@/types/(.*)$': '<rootDir>/types/$1',\n    '^@/app/(.*)$': '<rootDir>/app/$1',\n  },\n  \n  // Transform configuration\n  transform: {\n    '^.+\\\\.(js|jsx|ts|tsx)$': ['babel-jest', { presets: ['next/babel'] }],\n  },\n  \n  // Environment variables for tests\n  setupFiles: ['<rootDir>/tests/jest.env.js'],\n  \n  // Test timeout\n  testTimeout: 10000,\n  \n  // Reporters\n  reporters: [\n    'default',\n    [\n      'jest-junit',\n      {\n        outputDirectory: 'test-results',\n        outputName: 'junit.xml',\n        classNameTemplate: '{classname}',\n        titleTemplate: '{title}',\n        ancestorSeparator: ' â€º ',\n        usePathForSuiteName: true,\n      },\n    ],\n  ],\n  \n  // Globals\n  globals: {\n    'ts-jest': {\n      tsconfig: 'tsconfig.json',\n    },\n  },\n  \n  // Verbose output for CI\n  verbose: process.env.CI === 'true',\n  \n  // Clear mocks between tests\n  clearMocks: true,\n  \n  // Restore mocks after each test\n  restoreMocks: true,\n};\n\n// createJestConfig is exported this way to ensure that next/jest can load the Next.js config which is async\nmodule.exports = createJestConfig(config);"