import { defineConfig, devices } from '@playwright/test';\n\n/**\n * @see https://playwright.dev/docs/test-configuration\n */\nexport default defineConfig({\n  testDir: './tests/e2e',\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: [\n    ['html'],\n    ['json', { outputFile: 'test-results/playwright-report.json' }],\n    ['junit', { outputFile: 'test-results/playwright-results.xml' }],\n    ...(process.env.CI ? [['github'] as const] : []),\n  ],\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    baseURL: process.env.PLAYWRIGHT_TEST_BASE_URL || 'http://localhost:3000',\n\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: 'on-first-retry',\n    \n    /* Screenshot on failure */\n    screenshot: 'only-on-failure',\n    \n    /* Video on failure */\n    video: 'retain-on-failure',\n    \n    /* Global timeout for each action */\n    actionTimeout: 15000,\n    \n    /* Global timeout for navigation */\n    navigationTimeout: 30000,\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    {\n      name: 'chromium',\n      use: { ...devices['Desktop Chrome'] },\n    },\n\n    {\n      name: 'firefox',\n      use: { ...devices['Desktop Firefox'] },\n    },\n\n    {\n      name: 'webkit',\n      use: { ...devices['Desktop Safari'] },\n    },\n\n    /* Test against mobile viewports. */\n    {\n      name: 'Mobile Chrome',\n      use: { ...devices['Pixel 5'] },\n    },\n    {\n      name: 'Mobile Safari',\n      use: { ...devices['iPhone 12'] },\n    },\n\n    /* Test against branded browsers. */\n    {\n      name: 'Microsoft Edge',\n      use: { ...devices['Desktop Edge'], channel: 'msedge' },\n    },\n    {\n      name: 'Google Chrome',\n      use: { ...devices['Desktop Chrome'], channel: 'chrome' },\n    },\n  ],\n\n  /* Run your local dev server before starting the tests */\n  webServer: process.env.CI\n    ? undefined\n    : {\n        command: 'npm run dev',\n        url: 'http://localhost:3000',\n        reuseExistingServer: !process.env.CI,\n        timeout: 120 * 1000,\n        env: {\n          NODE_ENV: 'test',\n          TYPESENSE_HOST: 'localhost',\n          TYPESENSE_PORT: '8108',\n          TYPESENSE_PROTOCOL: 'http',\n          TYPESENSE_API_KEY: 'test-admin-key',\n          TYPESENSE_SEARCH_ONLY_API_KEY: 'test-search-key',\n          NEXT_PUBLIC_TYPESENSE_HOST: 'localhost',\n          NEXT_PUBLIC_TYPESENSE_PORT: '8108',\n          NEXT_PUBLIC_TYPESENSE_PROTOCOL: 'http',\n          NEXT_PUBLIC_TYPESENSE_SEARCH_ONLY_API_KEY: 'test-search-key',\n        },\n      },\n  \n  /* Global setup and teardown */\n  globalSetup: './tests/e2e/global-setup.ts',\n  globalTeardown: './tests/e2e/global-teardown.ts',\n  \n  /* Test timeout */\n  timeout: 60000,\n  \n  /* Expect timeout */\n  expect: {\n    timeout: 10000,\n  },\n  \n  /* Output directory */\n  outputDir: 'test-results/playwright-output',\n  \n  /* Metadata */\n  metadata: {\n    'test-env': process.env.NODE_ENV || 'test',\n    'base-url': process.env.PLAYWRIGHT_TEST_BASE_URL || 'http://localhost:3000',\n  },\n});"